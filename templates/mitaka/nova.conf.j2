[DEFAULT]
rpc_backend={{ rpc_backend }}
lock_path={{ lock_path }}

my_ip={{ my_ip }}
host={{ node.host }}

use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver

# notify
notify_on_state_change=vm_and_task_state
notification_driver = messagingv2

# Top-level directory for maintaining nova's state
state_path={{ state_path }}

ec2_listen_port={{ ec2_port }}
ec2_workers=1

osapi_compute_listen_port={{ api_port }}
osapi_compute_workers=1
metadata_listen_port={{ metadata_port }}
metadata_workers=1

# Time period to generate instance usages for.  Time period
# must be hour, day, month or year (string value)
#instance_usage_audit_period=month
instance_usage_audit_period=hour

#novncproxy_host=0.0.0.0
novncproxy_port={{ novncproxy_port }}

# Generate periodic compute.instance.exists notifications
# (boolean value)
#instance_usage_audit=false
instance_usage_audit=true

reserved_host_disk_mb={{ reserved_host_disk_mb }}
reserved_host_memory_mb={{ reserved_host_memory_mb }}

network_api_class={{ network_api_class }}
security_group_api={{ security_group_api }}


#
# Options defined in nova.objects.network
#

# DEPRECATED: THIS VALUE SHOULD BE SET WHEN CREATING THE
# NETWORK. If True in multi_host mode, all compute hosts share
# the same dhcp address. The same IP address used for DHCP
# will be added on each nova-network node which is only
# visible to the vms on the same host. (boolean value)
#share_dhcp_address=false

# DEPRECATED: THIS VALUE SHOULD BE SET WHEN CREATING THE
# NETWORK. MTU setting for network interface. (integer value)
#network_device_mtu=<None>


#
# Options defined in nova.objectstore.s3server
#

# Path to S3 buckets (string value)
#buckets_path=$state_path/buckets

# IP address for S3 API to listen (string value)
#s3_listen=0.0.0.0

# Port for S3 API to listen (integer value)
#s3_listen_port=3333


#
# Options defined in nova.pci.request
#

# An alias for a PCI passthrough device requirement. This
# allows users to specify the alias in the extra_spec for a
# flavor, without needing to repeat all the PCI property
# requirements. For example: pci_alias = { "name":
# "QuicAssist",   "product_id": "0443",   "vendor_id": "8086",
# "device_type": "ACCEL" } defines an alias for the Intel
# QuickAssist card. (multi valued) (multi valued)
#pci_alias=


#
# Options defined in nova.pci.whitelist
#

# White list of PCI devices available to VMs. For example:
# pci_passthrough_whitelist =  [{"vendor_id": "8086",
# "product_id": "0443"}] (multi valued)
#pci_passthrough_whitelist=


#
# Options defined in nova.scheduler.driver
#

# The scheduler host manager class to use (string value)
#scheduler_host_manager=nova.scheduler.host_manager.HostManager


#
# Options defined in nova.scheduler.filter_scheduler
#

# New instances will be scheduled on a host chosen randomly
# from a subset of the N best hosts. This property defines the
# subset size that a host is chosen from. A value of 1 chooses
# the first host returned by the weighing functions. This
# value must be at least 1. Any value less than 1 will be
# ignored, and 1 will be used instead (integer value)
#scheduler_host_subset_size=1


#
# Options defined in nova.scheduler.filters.aggregate_image_properties_isolation
#

# Force the filter to consider only keys matching the given
# namespace. (string value)
#aggregate_image_properties_isolation_namespace=<None>

# The separator used between the namespace and keys (string
# value)
#aggregate_image_properties_isolation_separator=.


#
# Options defined in nova.scheduler.filters.core_filter
#

# Virtual CPU to physical CPU allocation ratio which affects
# all CPU filters. This configuration specifies a global ratio
# for CoreFilter. For AggregateCoreFilter, it will fall back
# to this configuration value if no per-aggregate setting
# found. (floating point value)
#cpu_allocation_ratio=16.0


#
# Options defined in nova.scheduler.filters.disk_filter
#

# Virtual disk to physical disk allocation ratio (floating
# point value)
#disk_allocation_ratio=1.0


#
# Options defined in nova.scheduler.filters.io_ops_filter
#

# Tells filters to ignore hosts that have this many or more
# instances currently in build, resize, snapshot, migrate,
# rescue or unshelve task states (integer value)
#max_io_ops_per_host=8


#
# Options defined in nova.scheduler.filters.isolated_hosts_filter
#

# Images to run on isolated host (list value)
#isolated_images=

# Host reserved for specific images (list value)
#isolated_hosts=

# Whether to force isolated hosts to run only isolated images
# (boolean value)
#restrict_isolated_hosts_to_isolated_images=true


#
# Options defined in nova.scheduler.filters.num_instances_filter
#

# Ignore hosts that have too many instances (integer value)
#max_instances_per_host=50


#
# Options defined in nova.scheduler.filters.ram_filter
#

# Virtual ram to physical ram allocation ratio which affects
# all ram filters. This configuration specifies a global ratio
# for RamFilter. For AggregateRamFilter, it will fall back to
# this configuration value if no per-aggregate setting found.
# (floating point value)
#ram_allocation_ratio=1.5


#
# Options defined in nova.scheduler.host_manager
#

# Filter classes available to the scheduler which may be
# specified more than once.  An entry of
# "nova.scheduler.filters.all_filters" maps to all filters
# included with nova. (multi valued)
#scheduler_available_filters=nova.scheduler.filters.all_filters

# Which filter class names to use for filtering hosts when not
# specified in the request. (list value)
#scheduler_default_filters=RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter

# Which weight class names to use for weighing hosts (list
# value)
#scheduler_weight_classes=nova.scheduler.weights.all_weighers

# Determines if the Scheduler tracks changes to instances to
# help with its filtering decisions. (boolean value)
#scheduler_tracks_instance_changes=true


#
# Options defined in nova.scheduler.ironic_host_manager
#

# Which filter class names to use for filtering baremetal
# hosts when not specified in the request. (list value)
#baremetal_scheduler_default_filters=RetryFilter,AvailabilityZoneFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ExactRamFilter,ExactDiskFilter,ExactCoreFilter

# Flag to decide whether to use
# baremetal_scheduler_default_filters or not. (boolean value)
#scheduler_use_baremetal_filters=false


#
# Options defined in nova.scheduler.manager
#

# Default driver to use for the scheduler (string value)
#scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler

# How often (in seconds) to run periodic tasks in the
# scheduler driver of your choice. Please note this is likely
# to interact with the value of service_down_time, but exactly
# how they interact will depend on your choice of scheduler
# driver. (integer value)
#scheduler_driver_task_period=60


#
# Options defined in nova.scheduler.rpcapi
#

# The topic scheduler nodes listen on (string value)
#scheduler_topic=scheduler


#
# Options defined in nova.scheduler.scheduler_options
#

# Absolute path to scheduler configuration JSON file. (string
# value)
#scheduler_json_config_location=


#
# Options defined in nova.scheduler.utils
#

# Maximum number of attempts to schedule an instance (integer
# value)
#scheduler_max_attempts=3


#
# Options defined in nova.scheduler.weights.io_ops
#

# Multiplier used for weighing host io ops. Negative numbers
# mean a preference to choose light workload compute hosts.
# (floating point value)
#io_ops_weight_multiplier=-1.0


#
# Options defined in nova.scheduler.weights.ram
#

# Multiplier used for weighing ram.  Negative numbers mean to
# stack vs spread. (floating point value)
#ram_weight_multiplier=1.0


#
# Options defined in nova.servicegroup.api
#

# The driver for servicegroup service (valid options are: db,
# zk, mc) (string value)
#servicegroup_driver=db


#
# Options defined in nova.virt.configdrive
#

# Config drive format. One of iso9660 (default) or vfat
# (string value)
#config_drive_format=iso9660

# Set to "always" to force injection to take place on a config
# drive. NOTE: The "always" will be deprecated in the Liberty
# release cycle. (string value)
#force_config_drive=<None>

# Name and optionally path of the tool used for ISO image
# creation (string value)
#mkisofs_cmd=genisoimage


#
# Options defined in nova.virt.disk.api
#

# Name of the mkfs commands for ephemeral device. The format
# is <os_type>=<mkfs command> (multi valued)
#virt_mkfs=

# Attempt to resize the filesystem by accessing the image over
# a block device. This is done by the host and may not be
# necessary if the image contains a recent version of cloud-
# init. Possible mechanisms require the nbd driver (for qcow
# and raw), or loop (for raw). (boolean value)
resize_fs_using_block_device=false


#
# Options defined in nova.virt.disk.mount.nbd
#

# Amount of time, in seconds, to wait for NBD device start up.
# (integer value)
timeout_nbd={{ timeout_nbd }}


#
# Options defined in nova.virt.driver
#

# Driver to use for controlling virtualization. Options
# include: libvirt.LibvirtDriver, xenapi.XenAPIDriver,
# fake.FakeDriver, baremetal.BareMetalDriver,
# vmwareapi.VMwareVCDriver, hyperv.HyperVDriver (string value)
#compute_driver=<None>
compute_driver={{ compute_driver }}

# The default format an ephemeral_volume will be formatted
# with on creation. (string value)
#default_ephemeral_format=<None>

# VM image preallocation mode: "none" => no storage
# provisioning is done up front, "space" => storage is fully
# allocated at instance start (string value)
#preallocate_images=none

# Whether to use cow images (boolean value)
#use_cow_images=true

# Fail instance boot if vif plugging fails (boolean value)
#vif_plugging_is_fatal=true

# Number of seconds to wait for neutron vif plugging events to
# arrive before continuing or failing (see
# vif_plugging_is_fatal). If this is set to zero and
# vif_plugging_is_fatal is False, events should not be
# expected to arrive at all. (integer value)
#vif_plugging_timeout=300


#
# Options defined in nova.virt.firewall
#

# Firewall driver (defaults to hypervisor specific iptables
# driver) (string value)
#firewall_driver=<None>
firewall_driver={{ firewall_driver }}

# Whether to allow network traffic from same network (boolean
# value)
#allow_same_net_traffic=true


#
# Options defined in nova.virt.hardware
#

# Defines which pcpus that instance vcpus can use. For
# example, "4-12,^8,15" (string value)
#vcpu_pin_set=<None>


#
# Options defined in nova.virt.imagecache
#

# Number of seconds to wait between runs of the image cache
# manager. Set to -1 to disable. Setting this to 0 will run at
# the default rate. (integer value)
#image_cache_manager_interval=2400

# Where cached images are stored under $instances_path. This
# is NOT the full path - just a folder name. For per-compute-
# host cached images, set to _base_$my_ip (string value)
#image_cache_subdirectory_name=_base

# Should unused base images be removed? (boolean value)
#remove_unused_base_images=true

# Unused unresized base images younger than this will not be
# removed (integer value)
#remove_unused_original_minimum_age_seconds=86400


#
# Options defined in nova.virt.images
#

# Force backing images to raw format (boolean value)
#force_raw_images=true


#
# Options defined in nova.virt.netutils
#

# Template file for injected network (string value)
#injected_network_template=$pybasedir/nova/virt/interfaces.template


#
# Options defined in nova.vnc
#

# Location of VNC console proxy, in the form
# "http://127.0.0.1:6080/vnc_auto.html" (string value)
#novncproxy_base_url=http://127.0.0.1:6080/vnc_auto.html
novncproxy_base_url={{ novncproxy_base_url }}

# Location of nova xvp VNC console proxy, in the form
# "http://127.0.0.1:6081/console" (string value)
#xvpvncproxy_base_url=http://127.0.0.1:6081/console

# IP address on which instance vncservers should listen
# (string value)
#vncserver_listen=127.0.0.1
vncserver_listen={{ vncserver_listen }}
vncserver_proxyclient_address={{ vncserver_proxyclient_address }}

# The address to which proxy clients (like nova-xvpvncproxy)
# should connect (string value)
#vncserver_proxyclient_address=127.0.0.1
vncserver_proxyclient_address={{ vncserver_proxyclient_address }}

# Enable VNC related features (boolean value)
#vnc_enabled=true

# Keymap for VNC (string value)
#vnc_keymap=en-us


#
# Options defined in nova.vnc.xvp_proxy
#

# Port that the XCP VNC proxy should bind to (integer value)
#xvpvncproxy_port=6081

# Address that the XCP VNC proxy should bind to (string value)
#xvpvncproxy_host=0.0.0.0


#
# Options defined in nova.volume
#

# The full class name of the volume API class to use (string
# value)
#volume_api_class=nova.volume.cinder.API


[None]

#
# Options defined in nova.openstack.common.eventlet_backdoor
#

# Enable eventlet backdoor.  Acceptable values are 0, <port>,
# and <start>:<end>, where 0 results in listening on a random
# tcp port number; <port> results in listening on the
# specified port number (and not enabling backdoor if that
# port is in use); and <start>:<end> results in listening on
# the smallest unused port number within the specified range
# of port numbers.  The chosen port is displayed in the
# service's log file. (string value)
#backdoor_port=<None>


#
# Options defined in nova.openstack.common.memorycache
#

# Memcached servers or None for in process cache. (list value)
#memcached_servers=<None>


#
# Options defined in nova.openstack.common.periodic_task
#

# Some periodic tasks can be run in a separate process. Should
# we run them here? (boolean value)
#run_external_periodic_tasks=true


#
# Options defined in nova.openstack.common.policy
#

# The JSON file that defines policies. (string value)
#policy_file=policy.json

# Default rule. Enforced when a requested rule is not found.
# (string value)
#policy_default_rule=default

# Directories where policy configuration files are stored.
# They can be relative to any directory in the search path
# defined by the config_dir option, or absolute paths. The
# file defined by policy_file must exist for these directories
# to be searched.  Missing or empty directories are ignored.
# (multi valued)
#policy_dirs=policy.d


#
# Options defined in nova.openstack.common.versionutils
#

# Enables or disables fatal status of deprecations. (boolean
# value)
#fatal_deprecations=false


[api_database]

#
# Options defined in nova.db.sqlalchemy.api
#

# The SQLAlchemy connection string to use to connect to the
# Nova API database. (string value)
#connection=<None>

# If True, SQLite uses synchronous mode. (boolean value)
#sqlite_synchronous=true

# Timeout before idle SQL connections are reaped. (integer
# value)
#idle_timeout=3600

# Maximum number of SQL connections to keep open in a pool.
# (integer value)
#max_pool_size=<None>

# Maximum number of database connection retries during
# startup. Set to -1 to specify an infinite retry count.
# (integer value)
#max_retries=10

# Interval between retries of opening a SQL connection.
# (integer value)
#retry_interval=10

# If set, use this value for max_overflow with SQLAlchemy.
# (integer value)
#max_overflow=<None>

# Verbosity of SQL debugging information: 0=None,
# 100=Everything. (integer value)
#connection_debug=0

# Add Python stack traces to SQL as comment strings. (boolean
# value)
#connection_trace=false

# If set, use this value for pool_timeout with SQLAlchemy.
# (integer value)
#pool_timeout=<None>


[barbican]

#
# Options defined in nova.keymgr.barbican
#

# Info to match when looking for barbican in the service
# catalog. Format is: separated values of the form:
# <service_type>:<service_name>:<endpoint_type> (string value)
#catalog_info=key-manager:barbican:public

# Override service catalog lookup with template for barbican
# endpoint e.g. http://localhost:9311/v1/%(project_id)s
# (string value)
#endpoint_template=<None>

# Region name of this node (string value)
#os_region_name=<None>


#
# Options defined in nova.volume.cinder
#

# Region name of this node (string value)
#os_region_name=<None>


[cells]

#
# Options defined in nova.cells.manager
#

# Cells communication driver to use (string value)
#driver=nova.cells.rpc_driver.CellsRPCDriver

# Number of seconds after an instance was updated or deleted
# to continue to update cells (integer value)
#instance_updated_at_threshold=3600

# Number of instances to update per periodic task run (integer
# value)
#instance_update_num_instances=1


#
# Options defined in nova.cells.messaging
#

# Maximum number of hops for cells routing. (integer value)
#max_hop_count=10

# Cells scheduler to use (string value)
#scheduler=nova.cells.scheduler.CellsScheduler


#
# Options defined in nova.cells.opts
#

# Enable cell functionality (boolean value)
#enable=false

# The topic cells nodes listen on (string value)
#topic=cells

# Manager for cells (string value)
#manager=nova.cells.manager.CellsManager

# Name of this cell (string value)
#name=nova

# Key/Multi-value list with the capabilities of the cell (list
# value)
#capabilities=hypervisor=xenserver;kvm,os=linux;windows

# Seconds to wait for response from a call to a cell. (integer
# value)
#call_timeout=60

# Percentage of cell capacity to hold in reserve. Affects both
# memory and disk utilization (floating point value)
#reserve_percent=10.0

# Type of cell: api or compute (string value)
#cell_type=compute

# Number of seconds after which a lack of capability and
# capacity updates signals the child cell is to be treated as
# a mute. (integer value)
#mute_child_interval=300

# Seconds between bandwidth updates for cells. (integer value)
#bandwidth_update_interval=600


#
# Options defined in nova.cells.rpc_driver
#

# Base queue name to use when communicating between cells.
# Various topics by message type will be appended to this.
# (string value)
#rpc_driver_queue_base=cells.intercell


#
# Options defined in nova.cells.scheduler
#

# Filter classes the cells scheduler should use.  An entry of
# "nova.cells.filters.all_filters" maps to all cells filters
# included with nova. (list value)
#scheduler_filter_classes=nova.cells.filters.all_filters

# Weigher classes the cells scheduler should use.  An entry of
# "nova.cells.weights.all_weighers" maps to all cell weighers
# included with nova. (list value)
#scheduler_weight_classes=nova.cells.weights.all_weighers

# How many retries when no cells are available. (integer
# value)
#scheduler_retries=10

# How often to retry in seconds when no cells are available.
# (integer value)
#scheduler_retry_delay=2


#
# Options defined in nova.cells.state
#

# Interval, in seconds, for getting fresh cell information
# from the database. (integer value)
#db_check_interval=60

# Configuration file from which to read cells configuration.
# If given, overrides reading cells from the database. (string
# value)
#cells_config=<None>


#
# Options defined in nova.cells.weights.mute_child
#

# Multiplier used to weigh mute children. (The value should be
# negative.) (floating point value)
#mute_weight_multiplier=-10.0

# Weight value assigned to mute children. (The value should be
# positive.) (floating point value)
#mute_weight_value=1000.0


#
# Options defined in nova.cells.weights.ram_by_instance_type
#

# Multiplier used for weighing ram.  Negative numbers mean to
# stack vs spread. (floating point value)
#ram_weight_multiplier=10.0


#
# Options defined in nova.cells.weights.weight_offset
#

# Multiplier used to weigh offset weigher. (floating point
# value)
#offset_weight_multiplier=1.0


[cinder]

#
# Options defined in nova.volume.cinder
#

# Info to match when looking for cinder in the service
# catalog. Format is: separated values of the form:
# <service_type>:<service_name>:<endpoint_type> (string value)
#catalog_info=volumev2:cinderv2:publicURL

# Override service catalog lookup with template for cinder
# endpoint e.g. http://localhost:8776/v1/%(project_id)s
# (string value)
#endpoint_template=<None>

# Number of cinderclient retries on failed http calls (integer
# value)
#http_retries=3

# Allow attach between instance and volume in different
# availability zones. (boolean value)
#cross_az_attach=true


[conductor]

#
# Options defined in nova.conductor.api
#

# Perform nova-conductor operations locally (boolean value)
#use_local=false

# The topic on which conductor nodes listen (string value)
#topic=conductor

# Full class name for the Manager for conductor (string value)
#manager=nova.conductor.manager.ConductorManager

# Number of workers for OpenStack Conductor service. The
# default will be the number of CPUs available. (integer
# value)
#workers=<None>
workers=1

[api_database]
connection = {{ api_database.connection }}

[database]
connection = {{ database.connection }}
#
# Options defined in nova.db.sqlalchemy.api
#

# The SQLAlchemy connection string to use to connect to the
# slave database. (string value)
#slave_connection=<None>

# The SQL mode to be used for MySQL sessions. This option,
# including the default, overrides any server-set SQL mode. To
# use whatever SQL mode is set by the server configuration,
# set this to no value. Example: mysql_sql_mode= (string
# value)
#mysql_sql_mode=TRADITIONAL


[ephemeral_storage_encryption]

#
# Options defined in nova.compute.api
#

# Whether to encrypt ephemeral storage (boolean value)
#enabled=false

# The cipher and mode to be used to encrypt ephemeral storage.
# Which ciphers are available ciphers depends on kernel
# support. See /proc/crypto for the list of available options.
# (string value)
#cipher=aes-xts-plain64

# The bit length of the encryption key to be used to encrypt
# ephemeral storage (in XTS mode only half of the bits are
# used for encryption key) (integer value)
#key_size=512


[glance]

# A list of the glance api servers available to nova. Prefix
# with https:// for ssl-based glance api servers.
# ([hostname|ip]:port) (list value)
#api_servers=<None>
api_servers={{ keystone.services.glance.internalurl }}

# Allow to perform insecure SSL (https) requests to glance
# (boolean value)
#api_insecure=false

# Number of retries when uploading / downloading an image to /
# from glance. (integer value)
#num_retries=0

# A list of url scheme that can be downloaded directly via the
# direct_url.  Currently supported schemes: [file]. (list
# value)
#allowed_direct_url_schemes=


[guestfs]

#
# Options defined in nova.virt.disk.vfs.guestfs
#

# Enable guestfs debug (boolean value)
#debug=false


[hyperv]

#
# Options defined in nova.virt.hyperv.pathutils
#

# The name of a Windows share name mapped to the
# "instances_path" dir and used by the resize feature to copy
# files to the target host. If left blank, an administrative
# share will be used, looking for the same "instances_path"
# used locally (string value)
#instances_path_share=


#
# Options defined in nova.virt.hyperv.utilsfactory
#

# Force V1 WMI utility classes (boolean value)
#force_hyperv_utils_v1=false

# Force V1 volume utility class (boolean value)
#force_volumeutils_v1=false


#
# Options defined in nova.virt.hyperv.vif
#

# External virtual switch Name, if not provided, the first
# external virtual switch is used (string value)
#vswitch_name=<None>


#
# Options defined in nova.virt.hyperv.vmops
#

# Required for live migration among hosts with different CPU
# features (boolean value)
#limit_cpu_features=false

# Sets the admin password in the config drive image (boolean
# value)
#config_drive_inject_password=false

# Path of qemu-img command which is used to convert between
# different image types (string value)
#qemu_img_cmd=qemu-img.exe

# Attaches the Config Drive image as a cdrom drive instead of
# a disk drive (boolean value)
#config_drive_cdrom=false

# Enables metrics collections for an instance by using
# Hyper-V's metric APIs. Collected data can by retrieved by
# other apps and services, e.g.: Ceilometer. Requires Hyper-V
# / Windows Server 2012 and above (boolean value)
#enable_instance_metrics_collection=false

# Enables dynamic memory allocation (ballooning) when set to a
# value greater than 1. The value expresses the ratio between
# the total RAM assigned to an instance and its startup RAM
# amount. For example a ratio of 2.0 for an instance with
# 1024MB of RAM implies 512MB of RAM allocated at startup
# (floating point value)
#dynamic_memory_ratio=1.0

# Number of seconds to wait for instance to shut down after
# soft reboot request is made. We fall back to hard reboot if
# instance does not shutdown within this window. (integer
# value)
#wait_soft_reboot_seconds=60


#
# Options defined in nova.virt.hyperv.volumeops
#

# The number of times to retry to attach a volume (integer
# value)
#volume_attach_retry_count=10

# Interval between volume attachment attempts, in seconds
# (integer value)
#volume_attach_retry_interval=5

# The number of times to retry checking for a disk mounted via
# iSCSI. (integer value)
#mounted_disk_query_retry_count=10

# Interval between checks for a mounted iSCSI disk, in
# seconds. (integer value)
#mounted_disk_query_retry_interval=5


[image_file_url]

#
# Options defined in nova.image.download.file
#

# List of file systems that are configured in this file in the
# image_file_url:<list entry name> sections (list value)
#filesystems=


[ironic]

#
# Options defined in nova.virt.ironic.driver
#

# Version of Ironic API service endpoint. (integer value)
#api_version=1

# URL for Ironic API endpoint. (string value)
#api_endpoint=<None>

# Ironic keystone admin name (string value)
#admin_username=<None>

# Ironic keystone admin password. (string value)
#admin_password=<None>

# Ironic keystone auth token. (string value)
#admin_auth_token=<None>

# Keystone public API endpoint. (string value)
#admin_url=<None>

# Log level override for ironicclient. Set this in order to
# override the global "default_log_levels", "verbose", and
# "debug" settings. DEPRECATED: use standard logging
# configuration. (string value)
#client_log_level=<None>

# Ironic keystone tenant name. (string value)
#admin_tenant_name=<None>

# How many retries when a request does conflict. (integer
# value)
#api_max_retries=60

# How often to retry in seconds when a request does conflict
# (integer value)
#api_retry_interval=2


[keymgr]

#
# Options defined in nova.keymgr
#

# The full class name of the key manager API class (string
# value)
#api_class=nova.keymgr.conf_key_mgr.ConfKeyManager


#
# Options defined in nova.keymgr.conf_key_mgr
#

# Fixed key returned by key manager, specified in hex (string
# value)
#fixed_key=<None>


[keystone_authtoken]
auth_uri = {{ cluster.keystone.endpoint }}
auth_url = {{ cluster.keystone.admin_endpoint }}
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = {{ cluster.keystone.service_tenant_name }}
username = {{ cluster.keystone.service_user }}
password = {{ cluster.keystone.service_password }}

#
# Options defined in keystonemiddleware.auth_token
#

# Complete public Identity API endpoint. (string value)

# API version of the admin Identity API endpoint. (string
# value)
#auth_version=<None>

# Do not handle authorization requests within the middleware,
# but delegate the authorization decision to downstream WSGI
# components. (boolean value)
#delay_auth_decision=false

# Request timeout value for communicating with Identity API
# server. (integer value)
#http_connect_timeout=<None>

# How many times are we trying to reconnect when communicating
# with Identity API Server. (integer value)
#http_request_max_retries=3

# Env key for the swift cache. (string value)
#cache=<None>

# Required if identity server requires client certificate
# (string value)
#certfile=<None>

# Required if identity server requires client certificate
# (string value)
#keyfile=<None>

# A PEM encoded Certificate Authority to use when verifying
# HTTPs connections. Defaults to system CAs. (string value)
#cafile=<None>

# Verify HTTPS connections. (boolean value)
#insecure=false

# Directory used to cache files related to PKI tokens. (string
# value)
#signing_dir=<None>

# Optionally specify a list of memcached server(s) to use for
# caching. If left undefined, tokens will instead be cached
# in-process. (list value)
# Deprecated group/name - [DEFAULT]/memcache_servers
#memcached_servers=<None>

# In order to prevent excessive effort spent validating
# tokens, the middleware caches previously-seen tokens for a
# configurable duration (in seconds). Set to -1 to disable
# caching completely. (integer value)
#token_cache_time=300

# Determines the frequency at which the list of revoked tokens
# is retrieved from the Identity service (in seconds). A high
# number of revocation events combined with a low cache
# duration may significantly reduce performance. (integer
# value)
#revocation_cache_time=10

# (Optional) If defined, indicate whether token data should be
# authenticated or authenticated and encrypted. Acceptable
# values are MAC or ENCRYPT.  If MAC, token data is
# authenticated (with HMAC) in the cache. If ENCRYPT, token
# data is encrypted and authenticated in the cache. If the
# value is not one of these options or empty, auth_token will
# raise an exception on initialization. (string value)
#memcache_security_strategy=<None>

# (Optional, mandatory if memcache_security_strategy is
# defined) This string is used for key derivation. (string
# value)
#memcache_secret_key=<None>

# (Optional) Number of seconds memcached server is considered
# dead before it is tried again. (integer value)
#memcache_pool_dead_retry=300

# (Optional) Maximum total number of open connections to every
# memcached server. (integer value)
#memcache_pool_maxsize=10

# (Optional) Socket timeout in seconds for communicating with
# a memcache server. (integer value)
#memcache_pool_socket_timeout=3

# (Optional) Number of seconds a connection to memcached is
# held unused in the pool before it is closed. (integer value)
#memcache_pool_unused_timeout=60

# (Optional) Number of seconds that an operation will wait to
# get a memcache client connection from the pool. (integer
# value)
#memcache_pool_conn_get_timeout=10

# (Optional) Use the advanced (eventlet safe) memcache client
# pool. The advanced pool will only work under python 2.x.
# (boolean value)
#memcache_use_advanced_pool=false

# (Optional) Indicate whether to set the X-Service-Catalog
# header. If False, middleware will not ask for service
# catalog on token validation and will not set the X-Service-
# Catalog header. (boolean value)
#include_service_catalog=true

# Used to control the use and type of token binding. Can be
# set to: "disabled" to not check token binding. "permissive"
# (default) to validate binding information if the bind type
# is of a form known to the server and ignore it if not.
# "strict" like "permissive" but if the bind type is unknown
# the token will be rejected. "required" any form of token
# binding is needed to be allowed. Finally the name of a
# binding method that must be present in tokens. (string
# value)
#enforce_token_bind=permissive

# If true, the revocation list will be checked for cached
# tokens. This requires that PKI tokens are configured on the
# identity server. (boolean value)
#check_revocations_for_cached=false

# Hash algorithms to use for hashing PKI tokens. This may be a
# single algorithm or multiple. The algorithms are those
# supported by Python standard hashlib.new(). The hashes will
# be tried in the order given, so put the preferred one first
# for performance. The result of the first hash will be stored
# in the cache. This will typically be set to multiple values
# only while migrating from a less secure algorithm to a more
# secure one. Once all the old tokens are expired this option
# should be set to a single value for better performance.
# (list value)
#hash_algorithms=md5


[libvirt]

#
# Options defined in nova.virt.libvirt.driver
#

# Rescue ami image. This will not be used if an image id is
# provided by the user. (string value)
#rescue_image_id=<None>

# Rescue aki image (string value)
#rescue_kernel_id=<None>

# Rescue ari image (string value)
#rescue_ramdisk_id=<None>

# Libvirt domain type (valid options are: kvm, lxc, qemu, uml,
# xen and parallels) (string value)
#virt_type=kvm
virt_type={{ libvirt.virt_type }}

# Override the default libvirt URI (which is dependent on
# virt_type) (string value)
#connection_uri=

# Inject the admin password at boot time, without an agent.
# (boolean value)
#inject_password=false

# Inject the ssh public key at boot time (boolean value)
#inject_key=false

# The partition to inject to : -2 => disable, -1 => inspect
# (libguestfs only), 0 => not partitioned, >0 => partition
# number (integer value)
#inject_partition=-2

# Sync virtual and real mouse cursors in Windows VMs (boolean
# value)
#use_usb_tablet=true

# Migration target URI (any included "%s" is replaced with the
# migration target hostname) (string value)
#live_migration_uri=qemu+tcp://%s/system

# Migration flags to be set for live migration (string value)
#live_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED

# Migration flags to be set for block migration (string value)
#block_migration_flag=VIR_MIGRATE_UNDEFINE_SOURCE, VIR_MIGRATE_PEER2PEER, VIR_MIGRATE_LIVE, VIR_MIGRATE_TUNNELLED, VIR_MIGRATE_NON_SHARED_INC

# Maximum bandwidth to be used during migration, in Mbps
# (integer value)
#live_migration_bandwidth=0

# Snapshot image format (valid options are : raw, qcow2, vmdk,
# vdi). Defaults to same as source image (string value)
#snapshot_image_format=<None>

# Override the default disk prefix for the devices attached to
# a server, which is dependent on virt_type. (valid options
# are: sd, xvd, uvd, vd) (string value)
#disk_prefix=<None>

# Number of seconds to wait for instance to shut down after
# soft reboot request is made. We fall back to hard reboot if
# instance does not shutdown within this window. (integer
# value)
#wait_soft_reboot_seconds=120

# Set to "host-model" to clone the host CPU feature flags; to
# "host-passthrough" to use the host CPU model exactly; to
# "custom" to use a named CPU model; to "none" to not set any
# CPU model. If virt_type="kvm|qemu", it will default to
# "host-model", otherwise it will default to "none" (string
# value)
#cpu_mode=<None>

# Set to a named libvirt CPU model (see names listed in
# /usr/share/libvirt/cpu_map.xml). Only has effect if
# cpu_mode="custom" and virt_type="kvm|qemu" (string value)
#cpu_model=<None>

# Location where libvirt driver will store snapshots before
# uploading them to image service (string value)
#snapshots_directory=$instances_path/snapshots

# Location where the Xen hvmloader is kept (string value)
#xen_hvmloader_path=/usr/lib/xen/boot/hvmloader

# Specific cachemodes to use for different disk types e.g:
# file=directsync,block=none (list value)
#disk_cachemodes=

# A path to a device that will be used as source of entropy on
# the host. Permitted options are: /dev/random or /dev/hwrng
# (string value)
#rng_dev_path=<None>

# For qemu or KVM guests, set this option to specify a default
# machine type per host architecture. You can find a list of
# supported machine types in your environment by checking the
# output of the "virsh capabilities"command. The format of the
# value for this config option is host-arch=machine-type. For
# example: x86_64=machinetype1,armv7l=machinetype2 (list
# value)
#hw_machine_type=<None>

# The data source used to the populate the host "serial" UUID
# exposed to guest in the virtual BIOS. Permitted options are
# "hardware", "os", "none" or "auto" (default). (string value)
#sysinfo_serial=auto

# A number of seconds to memory usage statistics period. Zero
# or negative value mean to disable memory usage statistics.
# (integer value)
#mem_stats_period_seconds=10

# List of uid targets and ranges.Syntax is guest-uid:host-
# uid:countMaximum of 5 allowed. (list value)
#uid_maps=

# List of guid targets and ranges.Syntax is guest-gid:host-
# gid:countMaximum of 5 allowed. (list value)
#gid_maps=


#
# Options defined in nova.virt.libvirt.imagebackend
#

# VM Images format. Acceptable values are: raw, qcow2, lvm,
# rbd, default. If default is specified, then use_cow_images
# flag is used instead of this one. (string value)
#images_type=default

# LVM Volume Group that is used for VM images, when you
# specify images_type=lvm. (string value)
#images_volume_group=<None>

# Create sparse logical volumes (with virtualsize) if this
# flag is set to True. (boolean value)
#sparse_logical_volumes=false

# The RADOS pool in which rbd volumes are stored (string
# value)
#images_rbd_pool=rbd

# Path to the ceph configuration file to use (string value)
#images_rbd_ceph_conf=

# Discard option for nova managed disks (valid options are:
# ignore, unmap). Need Libvirt(1.0.6) Qemu1.5 (raw format)
# Qemu1.6(qcow2 format) (string value)
#hw_disk_discard=<None>


#
# Options defined in nova.virt.libvirt.imagecache
#

# Allows image information files to be stored in non-standard
# locations (string value)
#image_info_filename_pattern=$instances_path/$image_cache_subdirectory_name/%(image)s.info

# Should unused kernel images be removed? This is only safe to
# enable if all compute nodes have been updated to support
# this option. This will be enabled by default in future.
# (boolean value)
#remove_unused_kernels=false

# Unused resized base images younger than this will not be
# removed (integer value)
#remove_unused_resized_minimum_age_seconds=3600

# Write a checksum for files in _base to disk (boolean value)
#checksum_base_images=false

# How frequently to checksum base images (integer value)
#checksum_interval_seconds=3600


#
# Options defined in nova.virt.libvirt.lvm
#

# Method used to wipe old volumes (valid options are: none,
# zero, shred) (string value)
#volume_clear=zero

# Size in MiB to wipe at start of old volumes. 0 => all
# (integer value)
#volume_clear_size=0


#
# Options defined in nova.virt.libvirt.utils
#

# Compress snapshot images when possible. This currently
# applies exclusively to qcow2 images (boolean value)
#snapshot_compression=false


#
# Options defined in nova.virt.libvirt.vif
#

# Use virtio for bridge interfaces with KVM/QEMU (boolean
# value)
#use_virtio_for_bridges=true


#
# Options defined in nova.virt.libvirt.volume
#

# Number of times to rescan iSCSI target to find volume
# (integer value)
#num_iscsi_scan_tries=5

# Number of times to rescan iSER target to find volume
# (integer value)
#num_iser_scan_tries=5

# The RADOS client name for accessing rbd volumes (string
# value)
#rbd_user=<None>

# The libvirt UUID of the secret for the rbd_uservolumes
# (string value)
#rbd_secret_uuid=<None>

# Directory where the NFS volume is mounted on the compute
# node (string value)
#nfs_mount_point_base=$state_path/mnt

# Mount options passed to the NFS client. See section of the
# nfs man page for details (string value)
#nfs_mount_options=<None>

# Directory where the SMBFS shares are mounted on the compute
# node (string value)
#smbfs_mount_point_base=$state_path/mnt

# Mount options passed to the SMBFS client. See mount.cifs man
# page for details. Note that the libvirt-qemu uid and gid
# must be specified. (string value)
#smbfs_mount_options=

# Number of times to rediscover AoE target to find volume
# (integer value)
#num_aoe_discover_tries=3

# Directory where the glusterfs volume is mounted on the
# compute node (string value)
#glusterfs_mount_point_base=$state_path/mnt

# Use multipath connection of the iSCSI volume (boolean value)
#iscsi_use_multipath=false

# Use multipath connection of the iSER volume (boolean value)
#iser_use_multipath=false

# Path or URL to Scality SOFS configuration file (string
# value)
#scality_sofs_config=<None>

# Base dir where Scality SOFS shall be mounted (string value)
#scality_sofs_mount_point=$state_path/scality

# Protocols listed here will be accessed directly from QEMU.
# Currently supported protocols: [gluster] (list value)
#qemu_allowed_storage_drivers=

# Directory where the Quobyte volume is mounted on the compute
# node (string value)
#quobyte_mount_point_base=$state_path/mnt

# Path to a Quobyte Client configuration file. (string value)
#quobyte_client_cfg=<None>

# The iSCSI transport iface to use to connect to target in
# case offload support is desired. Supported transports are
# be2iscsi, bnx2i, cxgb3i, cxgb4i, qla4xxx and ocs. Default
# format is transport_name.hwaddress and can be generated
# manually or via iscsiadm -m iface (string value)
# Deprecated group/name - [DEFAULT]/iscsi_transport
#iscsi_iface=<None>


[metrics]

#
# Options defined in nova.scheduler.weights.metrics
#

# Multiplier used for weighing metrics. (floating point value)
#weight_multiplier=1.0

# How the metrics are going to be weighed. This should be in
# the form of "<name1>=<ratio1>, <name2>=<ratio2>, ...", where
# <nameX> is one of the metrics to be weighed, and <ratioX> is
# the corresponding ratio. So for "name1=1.0, name2=-1.0" The
# final weight would be name1.value * 1.0 + name2.value *
# -1.0. (list value)
#weight_setting=

# How to treat the unavailable metrics. When a metric is NOT
# available for a host, if it is set to be True, it would
# raise an exception, so it is recommended to use the
# scheduler filter MetricFilter to filter out those hosts. If
# it is set to be False, the unavailable metric would be
# treated as a negative factor in weighing process, the
# returned value would be set by the option
# weight_of_unavailable. (boolean value)
#required=true

# The final weight value to be returned if required is set to
# False and any one of the metrics set by weight_setting is
# unavailable. (floating point value)
#weight_of_unavailable=-10000.0


[neutron]
url={{ neutron_url }}
service_metadata_proxy={{ service_neutron_metadata_proxy }}
metadata_proxy_shared_secret={{ metadata_proxy_shared_secret }}

auth_uri = {{ cluster.keystone.endpoint }}
auth_url = {{ cluster.keystone.admin_endpoint }}
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = {{ cluster.keystone.service_tenant_name }}
username = {{ cluster.keystone.service_user }}
password = {{ cluster.keystone.service_password }}

admin_auth_url={{ keystone.services.keystone.adminurl }}
admin_username={{ keystone.service_user }}
admin_password={{ keystone.service_password }}
admin_tenant_name={{ keystone.service_tenant_name }}
region_name={{ keystone.service_region }}
auth_strategy=keystone
auth_plugin=password

#
# Options defined in nova.api.metadata.handler
#

# Set flag to indicate Neutron will proxy metadata requests
# and resolve instance ids. (boolean value)
#service_metadata_proxy=false

# Shared secret to validate proxies Neutron metadata requests
# (string value)
#metadata_proxy_shared_secret=

#
# Options defined in nova.network.neutronv2.api
#

# URL for connecting to neutron (string value)
#url=http://127.0.0.1:9696

# User id for connecting to neutron in admin context.
# DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. (string value)
#admin_user_id=<None>

# Username for connecting to neutron in admin context
# DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. (string value)
#admin_username=<None>

# Password for connecting to neutron in admin context
# DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. (string value)
#admin_password=<None>

# Tenant id for connecting to neutron in admin context
# DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. (string value)
#admin_tenant_id=<None>

# Tenant name for connecting to neutron in admin context. This
# option will be ignored if neutron_admin_tenant_id is set.
# Note that with Keystone V3 tenant names are only unique
# within a domain. DEPRECATED: specify an auth_plugin and
# appropriate credentials instead. (string value)
#admin_tenant_name=<None>

# Region name for connecting to neutron in admin context
# (string value)

# Authorization URL for connecting to neutron in admin
# context. DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. (string value)
#admin_auth_url=http://localhost:5000/v2.0

# Authorization strategy for connecting to neutron in admin
# context. DEPRECATED: specify an auth_plugin and appropriate
# credentials instead. If an auth_plugin is specified strategy
# will be ignored. (string value)

# Name of Integration Bridge used by Open vSwitch (string
# value)
#ovs_bridge=br-int

# Number of seconds before querying neutron for extensions
# (integer value)
#extension_sync_interval=600

# DEPRECATED: Allow an instance to have multiple vNICs
# attached to the same Neutron network. This option is
# deprecated in the 2015.1 release and will be removed in the
# 2015.2 release where the default behavior will be to always
# allow multiple ports from the same network to be attached to
# an instance. (boolean value)
#allow_duplicate_networks=false


[osapi_v3]

#
# Options defined in nova.api.openstack
#

# Whether the V3 API is enabled or not (boolean value)
#enabled=false

# A list of v3 API extensions to never load. Specify the
# extension aliases here. (list value)
#extensions_blacklist=

# If the list is not empty then a v3 API extension will only
# be loaded if it exists in this list. Specify the extension
# aliases here. (list value)
#extensions_whitelist=


[rdp]

#
# Options defined in nova.rdp
#

# Location of RDP html5 console proxy, in the form
# "http://127.0.0.1:6083/" (string value)
#html5_proxy_base_url=http://127.0.0.1:6083/

# Enable RDP related features (boolean value)
#enabled=false


[serial_console]

#
# Options defined in nova.cmd.serialproxy
#

# Host on which to listen for incoming requests (string value)
#serialproxy_host=0.0.0.0

# Port on which to listen for incoming requests (integer
# value)
#serialproxy_port=6083


#
# Options defined in nova.console.serial
#

# Enable serial console related features (boolean value)
#enabled=false

# Range of TCP ports to use for serial ports on compute hosts
# (string value)
#port_range=10000:20000

# Location of serial console proxy. (string value)
#base_url=ws://127.0.0.1:6083/

# IP address on which instance serial console should listen
# (string value)
#listen=127.0.0.1

# The address to which proxy clients (like nova-serialproxy)
# should connect (string value)
#proxyclient_address=127.0.0.1


[spice]

#
# Options defined in nova.cmd.spicehtml5proxy
#

# Host on which to listen for incoming requests (string value)
#html5proxy_host=0.0.0.0

# Port on which to listen for incoming requests (integer
# value)
#html5proxy_port=6082


#
# Options defined in nova.spice
#

# Location of spice HTML5 console proxy, in the form
# "http://127.0.0.1:6082/spice_auto.html" (string value)
#html5proxy_base_url=http://127.0.0.1:6082/spice_auto.html

# IP address on which instance spice server should listen
# (string value)
#server_listen=127.0.0.1

# The address to which proxy clients (like nova-
# spicehtml5proxy) should connect (string value)
#server_proxyclient_address=127.0.0.1

# Enable spice related features (boolean value)
#enabled=false

# Enable spice guest agent support (boolean value)
#agent_enabled=true

# Keymap for spice (string value)
#keymap=en-us


[ssl]

#
# Options defined in nova.openstack.common.sslutils
#

# CA certificate file to use to verify connecting clients.
# (string value)
#ca_file=<None>

# Certificate file to use when starting the server securely.
# (string value)
#cert_file=<None>

# Private key file to use when starting the server securely.
# (string value)
#key_file=<None>


[trusted_computing]

#
# Options defined in nova.scheduler.filters.trusted_filter
#

# Attestation server HTTP (string value)
#attestation_server=<None>

# Attestation server Cert file for Identity verification
# (string value)
#attestation_server_ca_file=<None>

# Attestation server port (string value)
#attestation_port=8443

# Attestation web API URL (string value)
#attestation_api_url=/OpenAttestationWebServices/V1.0

# Attestation authorization blob - must change (string value)
#attestation_auth_blob=<None>

# Attestation status cache valid period length (integer value)
#attestation_auth_timeout=60

# Disable SSL cert verification for Attestation service
# (boolean value)
#attestation_insecure_ssl=false


[upgrade_levels]

#
# Options defined in nova.baserpc
#

# Set a version cap for messages sent to the base api in any
# service (string value)
#baseapi=<None>


#
# Options defined in nova.cells.rpc_driver
#

# Set a version cap for messages sent between cells services
# (string value)
#intercell=<None>


#
# Options defined in nova.cells.rpcapi
#

# Set a version cap for messages sent to local cells services
# (string value)
#cells=<None>


#
# Options defined in nova.cert.rpcapi
#

# Set a version cap for messages sent to cert services (string
# value)
#cert=<None>


#
# Options defined in nova.compute.rpcapi
#

# Set a version cap for messages sent to compute services. If
# you plan to do a live upgrade from an old version to a newer
# version, you should set this option to the old version
# before beginning the live upgrade procedure. Only upgrading
# to the next version is supported, so you cannot skip a
# release for the live upgrade procedure. (string value)
#compute=<None>


#
# Options defined in nova.conductor.rpcapi
#

# Set a version cap for messages sent to conductor services
# (string value)
#conductor=<None>


#
# Options defined in nova.console.rpcapi
#

# Set a version cap for messages sent to console services
# (string value)
#console=<None>


#
# Options defined in nova.consoleauth.rpcapi
#

# Set a version cap for messages sent to consoleauth services
# (string value)
#consoleauth=<None>


#
# Options defined in nova.network.rpcapi
#

# Set a version cap for messages sent to network services
# (string value)
#network=<None>


#
# Options defined in nova.scheduler.rpcapi
#

# Set a version cap for messages sent to scheduler services
# (string value)
#scheduler=<None>


[vmware]

#
# Options defined in nova.virt.vmwareapi.driver
#

# The PBM status. (boolean value)
#pbm_enabled=false

# PBM service WSDL file location URL. e.g.
# file:///opt/SDK/spbm/wsdl/pbmService.wsdl Not setting this
# will disable storage policy based placement of instances.
# (string value)
#pbm_wsdl_location=<None>

# The PBM default policy. If pbm_wsdl_location is set and
# there is no defined storage policy for the specific request
# then this policy will be used. (string value)
#pbm_default_policy=<None>

# Hostname or IP address for connection to VMware VC host.
# (string value)
#host_ip=<None>

# Port for connection to VMware VC host. (integer value)
#host_port=443

# Username for connection to VMware VC host. (string value)
#host_username=<None>

# Password for connection to VMware VC host. (string value)
#host_password=<None>

# Name of a VMware Cluster ComputeResource. (multi valued)
#cluster_name=<None>

# Regex to match the name of a datastore. (string value)
#datastore_regex=<None>

# The interval used for polling of remote tasks. (floating
# point value)
#task_poll_interval=0.5

# The number of times we retry on failures, e.g., socket
# error, etc. (integer value)
#api_retry_count=10

# VNC starting port (integer value)
#vnc_port=5900

# Total number of VNC ports (integer value)
#vnc_port_total=10000

# Whether to use linked clone (boolean value)
#use_linked_clone=true

# Optional VIM Service WSDL Location e.g
# http://<server>/vimService.wsdl. Optional over-ride to
# default location for bug work-arounds (string value)
#wsdl_location=<None>


#
# Options defined in nova.virt.vmwareapi.vif
#

# Physical ethernet adapter name for vlan networking (string
# value)
#vlan_interface=vmnic0

# Name of Integration Bridge (string value)
#integration_bridge=br-int


#
# Options defined in nova.virt.vmwareapi.vim_util
#

# The maximum number of ObjectContent data objects that should
# be returned in a single result. A positive value will cause
# the operation to suspend the retrieval when the count of
# objects reaches the specified maximum. The server may still
# limit the count to something less than the configured value.
# Any remaining objects may be retrieved with additional
# requests. (integer value)
#maximum_objects=100


#
# Options defined in nova.virt.vmwareapi.vmops
#

# The prefix for Where cached images are stored. This is NOT
# the full path - just a folder prefix. This should only be
# used when a datastore cache should be shared between compute
# nodes. Note: this should only be used when the compute nodes
# have a shared file system. (string value)
#cache_prefix=<None>


[workarounds]

#
# Options defined in nova.utils
#

# This option allows a fallback to sudo for performance
# reasons. For example see
# https://bugs.launchpad.net/nova/+bug/1415106 (boolean value)
#disable_rootwrap=false

# When using libvirt 1.2.2 fails live snapshots intermittently
# under load.  This config option provides mechanism to
# disable livesnapshot while this is resolved.  See
# https://bugs.launchpad.net/nova/+bug/1334398 (boolean value)
#disable_libvirt_livesnapshot=true

# Whether to destroy instances on startup when we suspect they
# have previously been evacuated. This can result in data loss
# if undesired. See https://launchpad.net/bugs/1419785
# (boolean value)
#destroy_after_evacuate=true


[xenserver]

#
# Options defined in nova.virt.xenapi.agent
#

# Number of seconds to wait for agent reply (integer value)
#agent_timeout=30

# Number of seconds to wait for agent to be fully operational
# (integer value)
#agent_version_timeout=300

# Number of seconds to wait for agent reply to resetnetwork
# request (integer value)
#agent_resetnetwork_timeout=60

# Specifies the path in which the XenAPI guest agent should be
# located. If the agent is present, network configuration is
# not injected into the image. Used if
# compute_driver=xenapi.XenAPIDriver and flat_injected=True
# (string value)
#agent_path=usr/sbin/xe-update-networking

# Disables the use of the XenAPI agent in any image regardless
# of what image properties are present. (boolean value)
#disable_agent=false

# Determines if the XenAPI agent should be used when the image
# used does not contain a hint to declare if the agent is
# present or not. The hint is a glance property
# "xenapi_use_agent" that has the value "True" or "False".
# Note that waiting for the agent when it is not present will
# significantly increase server boot times. (boolean value)
#use_agent_default=false


#
# Options defined in nova.virt.xenapi.client.session
#

# Timeout in seconds for XenAPI login. (integer value)
#login_timeout=10

# Maximum number of concurrent XenAPI connections. Used only
# if compute_driver=xenapi.XenAPIDriver (integer value)
#connection_concurrent=5


#
# Options defined in nova.virt.xenapi.driver
#

# URL for connection to XenServer/Xen Cloud Platform. A
# special value of unix://local can be used to connect to the
# local unix socket.  Required if
# compute_driver=xenapi.XenAPIDriver (string value)
#connection_url=<None>

# Username for connection to XenServer/Xen Cloud Platform.
# Used only if compute_driver=xenapi.XenAPIDriver (string
# value)
#connection_username=root

# Password for connection to XenServer/Xen Cloud Platform.
# Used only if compute_driver=xenapi.XenAPIDriver (string
# value)
#connection_password=<None>

# The interval used for polling of coalescing vhds. Used only
# if compute_driver=xenapi.XenAPIDriver (floating point value)
#vhd_coalesce_poll_interval=5.0

# Ensure compute service is running on host XenAPI connects
# to. (boolean value)
#check_host=true

# Max number of times to poll for VHD to coalesce. Used only
# if compute_driver=xenapi.XenAPIDriver (integer value)
#vhd_coalesce_max_attempts=20

# Base path to the storage repository (string value)
#sr_base_path=/var/run/sr-mount

# The iSCSI Target Host (string value)
#target_host=<None>

# The iSCSI Target Port, default is port 3260 (string value)
#target_port=3260

# IQN Prefix (string value)
#iqn_prefix=iqn.2010-10.org.openstack

# Used to enable the remapping of VBD dev (Works around an
# issue in Ubuntu Maverick) (boolean value)
#remap_vbd_dev=false

# Specify prefix to remap VBD dev to (ex. /dev/xvdb ->
# /dev/sdb) (string value)
#remap_vbd_dev_prefix=sd


#
# Options defined in nova.virt.xenapi.image.bittorrent
#

# Base URL for torrent files. (string value)
#torrent_base_url=<None>

# Probability that peer will become a seeder. (1.0 = 100%)
# (floating point value)
#torrent_seed_chance=1.0

# Number of seconds after downloading an image via BitTorrent
# that it should be seeded for other peers. (integer value)
#torrent_seed_duration=3600

# Cached torrent files not accessed within this number of
# seconds can be reaped (integer value)
#torrent_max_last_accessed=86400

# Beginning of port range to listen on (integer value)
#torrent_listen_port_start=6881

# End of port range to listen on (integer value)
#torrent_listen_port_end=6891

# Number of seconds a download can remain at the same progress
# percentage w/o being considered a stall (integer value)
#torrent_download_stall_cutoff=600

# Maximum number of seeder processes to run concurrently
# within a given dom0. (-1 = no limit) (integer value)
#torrent_max_seeder_processes_per_host=1


#
# Options defined in nova.virt.xenapi.pool
#

# To use for hosts with different CPUs (boolean value)
#use_join_force=true


#
# Options defined in nova.virt.xenapi.vif
#

# Name of Integration Bridge used by Open vSwitch (string
# value)
#ovs_integration_bridge=xapi1


#
# Options defined in nova.virt.xenapi.vm_utils
#

# Cache glance images locally. `all` will cache all images,
# `some` will only cache images that have the image_property
# `cache_in_nova=True`, and `none` turns off caching entirely
# (string value)
#cache_images=all

# Compression level for images, e.g., 9 for gzip -9. Range is
# 1-9, 9 being most compressed but most CPU intensive on dom0.
# (integer value)
#image_compression_level=<None>

# Default OS type (string value)
#default_os_type=linux

# Time to wait for a block device to be created (integer
# value)
#block_device_creation_timeout=10

# Maximum size in bytes of kernel or ramdisk images (integer
# value)
#max_kernel_ramdisk_size=16777216

# Filter for finding the SR to be used to install guest
# instances on. To use the Local Storage in default
# XenServer/XCP installations set this flag to other-config
# :i18n-key=local-storage. To select an SR with a different
# matching criteria, you could set it to other-
# config:my_favorite_sr=true. On the other hand, to fall back
# on the Default SR, as displayed by XenCenter, set this flag
# to: default-sr:true (string value)
#sr_matching_filter=default-sr:true

# Whether to use sparse_copy for copying data on a resize down
# (False will use standard dd). This speeds up resizes down
# considerably since large runs of zeros won't have to be
# rsynced (boolean value)
#sparse_copy=true

# Maximum number of retries to unplug VBD. if <=0, should try
# once and no retry (integer value)
#num_vbd_unplug_retries=10

# Whether or not to download images via Bit Torrent
# (all|some|none). (string value)
#torrent_images=none

# Name of network to use for booting iPXE ISOs (string value)
#ipxe_network_name=<None>

# URL to the iPXE boot menu (string value)
#ipxe_boot_menu_url=<None>

# Name and optionally path of the tool used for ISO image
# creation (string value)
#ipxe_mkisofs_cmd=mkisofs


#
# Options defined in nova.virt.xenapi.vmops
#

# Number of seconds to wait for instance to go to running
# state (integer value)
#running_timeout=60

# The XenAPI VIF driver using XenServer Network APIs. (string
# value)
#vif_driver=nova.virt.xenapi.vif.XenAPIBridgeDriver

# Dom0 plugin driver used to handle image uploads. (string
# value)
#image_upload_handler=nova.virt.xenapi.image.glance.GlanceStore


#
# Options defined in nova.virt.xenapi.volume_utils
#

# Number of seconds to wait for an SR to settle if the VDI
# does not exist when first introduced (integer value)
#introduce_vdi_retry_wait=20


[zookeeper]

#
# Options defined in nova.servicegroup.drivers.zk
#

# The ZooKeeper addresses for servicegroup service in the
# format of host1:port,host2:port,host3:port (string value)
#address=<None>

# The recv_timeout parameter for the zk session (integer
# value)
#recv_timeout=4000

# The prefix used in ZooKeeper to store ephemeral nodes
# (string value)
#sg_prefix=/servicegroups

# Number of seconds to wait until retrying to join the session
# (integer value)
#sg_retry_interval=5

[oslo_messaging_rabbit]
rabbit_host={{ rabbit_host }}
rabbit_port={{ rabbit_port }}
rabbit_userid={{ rabbit_userid }}
rabbit_password={{ rabbit_password }}
rabbit_virtual_host={{ rabbit_virtual_host }}

[vnc]
vncserver_listen={{ vncserver_listen }}
vncserver_proxyclient_address={{ vncserver_proxyclient_address }}

[oslo_concurency]
lock_path={{ lock_path }}
