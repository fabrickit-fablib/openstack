[DEFAULT]

trove_auth_url = {{ trove_auth_url }}
nova_compute_url = {{ nova_compute_url }}
cinder_url = {{ cinder_url }}
swift_url = {{ swift_url }}
neutron_url = {{ neutron_url }}

nova_proxy_admin_user = {{ cluster.keystone.service_user }}
nova_proxy_admin_pass = {{ cluster.keystone.service_password }}
nova_proxy_admin_tenant_name = {{ cluster.keystone.service_tenant_name }}

#transport_url=<None>
#rpc_backend=rabbit
control_exchange = trove

# swift_url = http://10.0.0.1:8080/v1/AUTH_
# os_region_name = RegionOne
# swift_service_type = object-store

# datastore_registry_ext = mysql:trove.guestagent.datastore.mysql.manager.Manager, percona:trove.guestagent.datastore.mysql.manager.Manager

# root_grant = ALTER ROUTINE, CREATE, ALTER, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, CREATE USER, DELETE, DROP, EVENT, EXECUTE, INDEX, INSERT, LOCK TABLES, PROCESS, REFERENCES, SELECT, SHOW DATABASES, SHOW VIEW, TRIGGER, UPDATE, USAGE
# root_grant_option = False
root_grant = ALL
root_grant_option = True

# Default password Length for root password
# default_password_length = 36


# ========== Default Storage Options for backup ==========

# Default configuration for storage strategy and storage options
# for backups

# For storage to Swift, use the following as defaults:
# storage_strategy = SwiftStorage
# storage_namespace = trove.common.strategies.storage.swift

# Default config options for storing backups to swift
# backup_swift_container = database_backups
# backup_use_gzip_compression = True
# backup_use_openssl_encryption = True
# backup_aes_cbc_key = "default_aes_cbc_key"
# backup_use_snet = False
# backup_chunk_size = 65536
# backup_segment_max_size = 2147483648


# ========== Sample Logging Configuration ==========

# Show more verbose log output (sets INFO log level output)
# verbose = True

# Show debugging output in logs (sets DEBUG log level output)
# debug = True

# Directory and path for log files
log_dir = /var/log/trove/
log_file = logfile.txt

[profiler]
# If False fully disable profiling feature.
#enabled = False
# If False doesn't trace SQL requests.
#trace_sqlalchemy = True


[oslo_messaging_rabbit]
rabbit_host = {{ rabbit_host }}
rabbit_port = {{ rabbit_port }}
rabbit_userid = {{ rabbit_userid }}
rabbit_password = {{ rabbit_password }}
rabbit_virtual_host = {{ rabbit_virtual_host }}


[mysql]
# For mysql, the following are the defaults for backup, and restore:
# backup_strategy = InnoBackupEx
# backup_namespace = trove.guestagent.strategies.backup.mysql_impl
# restore_namespace = trove.guestagent.strategies.restore.mysql_impl
# Default configuration for mysql replication
# replication_strategy = MysqlBinlogReplication
# replication_namespace = trove.guestagent.strategies.replication.mysql_binlog
# replication_user = slave_user
# replication_password = slave_password

# Users to ignore for user create/list/delete operations
# ignore_users = os_admin

# Databases to ignore for db create/list/delete operations
# ignore_dbs = mysql, information_schema, performance_schema

[vertica]
# For vertica, following are the defaults needed:
# mount_point = /var/lib/vertica
# readahead_size = 2048
# guestagent_strategy = trove.common.strategies.cluster.experimental.vertica.guestagent.VerticaGuestAgentStrategy

[redis]
# For redis, the following are the defaults for backup, and restore:
# backup_strategy = RedisBackup
# backup_namespace = trove.guestagent.strategies.backup.experimental.redis_impl
# restore_namespace = trove.guestagent.strategies.restore.experimental.redis_impl

[percona]
backup_namespace = trove.guestagent.strategies.backup.mysql_impl
restore_namespace = trove.guestagent.strategies.restore.mysql_impl

[couchbase]
backup_namespace = trove.guestagent.strategies.backup.experimental.couchbase_impl
restore_namespace = trove.guestagent.strategies.restore.experimental.couchbase_impl

[cassandra]
backup_namespace = trove.guestagent.strategies.backup.experimental.cassandra_impl
restore_namespace = trove.guestagent.strategies.restore.experimental.cassandra_impl

[db2]
# For db2, the following are the defaults for backup, and restore:
# backup_strategy = DB2Backup
# backup_namespace = trove.guestagent.strategies.backup.experimental.db2_impl
# restore_namespace = trove.guestagent.strategies.restore.experimental.db2_impl

[couchdb]
#For CouchDB, the following are the defaults for backup and restore:
# backup_strategy = CouchDBBackup
# backup_namespace = trove.guestagent.strategies.backup.experimental.couchdb_impl
# restore_namespace = trove.guestagent.strategies.restore.experimental.couchdb_impl
